{"version":3,"file":"static/js/497.2e509fcf.chunk.js","mappings":"iOAOaA,GAAOC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,gJASJE,EAAQF,EAAAA,EAAAA,MAAH,8IAWLG,EAAeH,EAAAA,EAAAA,IAAH,uGAQZI,GAAQJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,yMAaLM,EAAaN,EAAAA,EAAAA,OAAH,yfAyBVO,GAAeP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,gE,iDC3DnBS,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJG,OACAC,QACC,mDACA,2DAEDC,WACHC,SAAUN,EAAAA,KAEPG,OACAC,QACC,iDACA,mIAEDC,aAGCE,EAAgB,CACpBL,MAAO,GACPI,SAAU,IAGG,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,SAAC,KAAD,CACEH,cAAeA,EACfI,iBAAkBZ,EAClBa,SAdiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GACEM,EAAAA,EAAAA,IAAM,CACJb,MAAOW,EAAOX,MAAMC,OACpBG,SAAUO,EAAOP,SAASH,UAG9BW,GACD,EAGC,UAKE,UAACzB,EAAD,CAAM2B,aAAa,MAAnB,WACE,UAACxB,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,CAAQwB,KAAK,OAAO,YAGtB,SAACvB,EAAD,CACEwB,KAAK,QACLC,KAAK,QACLC,UAAU,QAKZ,SAACvB,EAAD,CAAcsB,KAAK,QAAQE,UAAU,aAEvC,UAAC7B,EAAD,YACE,UAACC,EAAD,YACE,SAAC,MAAD,CAAQwB,KAAK,OAAO,eAGtB,SAACvB,EAAD,CACEwB,KAAK,WACLC,KAAK,WACLC,UAAU,QAKZ,SAACvB,EAAD,CAAcsB,KAAK,WAAWE,UAAU,aAE1C,UAACzB,EAAD,CAAYsB,KAAK,SAAjB,WACE,SAAC,MAAD,CAASD,KAAK,OAAO,eAM9B,C,cC5Fc,SAASK,IACtB,OACE,SAAC,KAAD,WACE,4BACE,SAAC,KAAD,WACE,2BAAO,aAET,SAACd,EAAD,QAIP,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  max-width: 480px;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n\n  font-weight: 600;\n\n  color: #666666;\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  padding-left: 8px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 8px;\n  height: 36px;\n\n  border-radius: 8px;\n  border: 1px solid #cececf;\n\n  color: #5b5c6c;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n  font-size: 16px;\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  /* width: 160px; */\n  height: 36px;\n  padding: 8px;\n  border-radius: 8px;\n  border: 1px solid #cececf;\n\n  font-size: 16px;\n  font-weight: 500;\n\n  background-color: #d2d8db;\n  color: #666666;\n  box-shadow: #b4b4b4 2px 2px 0px;\n  transition: transform 200ms, box-shadow 200ms;\n\n  &:active {\n    transform: translateX(2px) translateY(2px);\n    box-shadow: #b4b4b4 0px 0px 0px;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  max-width: 480px;\n  color: #c00000;\n`;\n","import { Formik } from 'formik';\nimport {\n  Form,\n  Label,\n  LabelWrapper,\n  Field,\n  FormButton,\n  ErrorMessage,\n} from './LoginForm.styled';\nimport { FiMail, FiLock, FiLogIn } from 'react-icons/fi';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n      'Enter a valid email address. For example: best@mail.com'\n    )\n    .required(),\n  password: yup\n    .string()\n    .trim()\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n      'The password must be at least 8 characters long and include at least one lowercase letter, one uppercase letter, and one digit.'\n    )\n    .required(),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(\n      logIn({\n        email: values.email.trim(),\n        password: values.password.trim(),\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label>\n          <LabelWrapper>\n            <FiMail size=\"20\" />\n            Email\n          </LabelWrapper>\n          <Field\n            type=\"email\"\n            name=\"email\"\n            maxLength=\"40\"\n            // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // required\n          />\n          <ErrorMessage name=\"email\" component=\"span\" />\n        </Label>\n        <Label>\n          <LabelWrapper>\n            <FiLock size=\"20\" />\n            Password\n          </LabelWrapper>\n          <Field\n            type=\"password\"\n            name=\"password\"\n            maxLength=\"40\"\n            // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // required\n          />\n          <ErrorMessage name=\"password\" component=\"span\" />\n        </Label>\n        <FormButton type=\"submit\">\n          <FiLogIn size=\"20\" />\n          Login\n        </FormButton>\n      </Form>\n    </Formik>\n  );\n}\n\n// import { useDispatch } from 'react-redux';\n// import { logIn } from 'redux/auth/operations';\n\n// export default function LoginForm() {\n//   const dispatch = useDispatch();\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const form = e.currentTarget;\n//     dispatch(\n//       logIn({\n//         email: form.elements.email.value,\n//         password: form.elements.password.value,\n//       })\n//     );\n//     form.reset();\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} autoComplete=\"off\">\n//       <label>\n//         Email\n//         <input type=\"email\" name=\"email\" />\n//       </label>\n//       <label>\n//         Password\n//         <input type=\"password\" name=\"password\" />\n//       </label>\n//       <button type=\"submit\">Log In</button>\n//     </form>\n//   );\n// }\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nexport default function Login() {\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n        <LoginForm />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["Form","styled","FormikForm","Label","LabelWrapper","Field","FormikField","FormButton","ErrorMessage","FormikError","schema","yup","shape","email","trim","matches","required","password","initialValues","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","logIn","autoComplete","size","type","name","maxLength","component","Login"],"sourceRoot":""}