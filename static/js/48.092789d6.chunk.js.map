{"version":3,"file":"static/js/48.092789d6.chunk.js","mappings":"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","sources":["components/Header/Header.styled.jsx","components/Header/Header.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.jsx","helpers/toastNotifyOptions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","redux/contacts/selectors.js","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst HeaderTitle = styled.h1`\n  color: #5b5c6c;\n  font-size: 56px;\n`;\n\nexport { HeaderTitle };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { HeaderTitle } from './Header.styled';\n\nconst Header = ({ headerTitle }) => {\n  return <HeaderTitle>{headerTitle}</HeaderTitle>;\n};\n\nHeader.propTypes = {\n  headerTitle: PropTypes.string.isRequired,\n};\n\nexport { Header };\n","import styled from '@emotion/styled';\n\nconst SectionWrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  margin-bottom: 24px;\n  /* max-width: 540px; */\n  width: 100%;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n\nconst SectionTitle = styled.h2`\n  color: #5b5c6c;\n  margin-bottom: 12px;\n  font-size: 36px;\n`;\n\nexport { SectionWrapper, SectionTitle };\n","import PropTypes from 'prop-types';\n\nimport { SectionTitle, SectionWrapper } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <SectionWrapper>\n    {title && <SectionTitle>{title}</SectionTitle>}\n    {children}\n  </SectionWrapper>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any.isRequired,\n};\n\nexport { Section };\n","import styled from '@emotion/styled';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n  max-width: 480px;\n  width: 100%;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n\n  font-weight: 600;\n\n  color: #666666;\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  padding-left: 8px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 8px;\n  height: 36px;\n\n  border-radius: 8px;\n  border: 1px solid #cececf;\n\n  color: #5b5c6c;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n\n  font-size: 16px;\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 8px;\n  width: 160px;\n  height: 36px;\n  padding: 8px;\n  border-radius: 8px;\n  border: 1px solid #cececf;\n\n  font-size: 16px;\n  font-weight: 500;\n\n  background-color: #d2d8db;\n  color: #666666;\n  box-shadow: #b4b4b4 2px 2px 0px;\n  transition: transform 200ms, box-shadow 200ms;\n\n  &:active {\n    transform: translateX(2px) translateY(2px);\n    box-shadow: #b4b4b4 0px 0px 0px;\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  max-width: 480px;\n  color: #c00000;\n`;\n","export const notifyOptions = {\n  position: 'top-center',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'colored',\n};\n","import { Formik } from 'formik';\nimport {\n  Form,\n  Label,\n  LabelWrapper,\n  Field,\n  FormButton,\n  ErrorMessage,\n} from './ContactForm.styled';\nimport { FiPhone, FiUserPlus, FiUser } from 'react-icons/fi';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { notifyOptions } from 'helpers/toastNotifyOptions';\nimport { addContact } from 'redux/contacts/operations';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .max(20)\n    .matches(\n      /^[a-zA-Zа-яА-Я0-9]+(([' -][a-zA-Zа-яА-Я0-9 ])?[a-zA-Zа-яА-Я0-9]*)*$/,\n      `Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan`\n    )\n    .required(),\n  number: yup\n    .string()\n    .trim()\n    .matches(\n      /\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const handleSubmit = (newContact, { resetForm }) => {\n    const isContactExists = contacts?.some(contact => {\n      return (\n        contact.name.trim() === newContact.name.trim() ||\n        contact.number.trim() === newContact.number.trim()\n      );\n    });\n\n    if (isContactExists) {\n      toast.error(\n        `The contact with name: ${newContact.name} or phone number: ${newContact.number} already exists in your list.`,\n        notifyOptions\n      );\n    } else {\n      dispatch(\n        addContact({ name: newContact.name, number: newContact.number })\n      );\n      resetForm();\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"off\">\n        <Label>\n          <LabelWrapper>\n            <FiUser size=\"20\" />\n            Name\n          </LabelWrapper>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            maxLength=\"20\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            // required\n          />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </Label>\n        <Label>\n          <LabelWrapper>\n            <FiPhone size=\"20\" />\n            Number\n          </LabelWrapper>\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            maxLength=\"28\"\n            // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            // required\n          />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </Label>\n        <FormButton type=\"submit\">\n          <FiUserPlus size=\"20\" />\n          Add contact\n        </FormButton>\n      </Form>\n    </Formik>\n  );\n};\n\nexport { ContactForm };\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 480px;\n  width: 100%;\n  gap: 8px;\n\n  color: #666666;\n\n  font-weight: 600;\n`;\n\nexport const LabelWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding-left: 8px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n\n  padding: 8px;\n  height: 36px;\n\n  font-size: 16px;\n\n  border-radius: 8px;\n\n  border: 1px solid #cececf;\n\n  color: #5b5c6c;\n\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n","import React from 'react';\nimport { FiSearch } from 'react-icons/fi';\n\nimport { Label, LabelWrapper, Input } from './Filter.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter);\n\n  const handleChangeFilterInput = e => {\n    const { value } = e.currentTarget;\n    if (value.charAt(0) === ' ') {\n      // If the first symbol is a gap(space), we ignore it\n      dispatch(setFilterValue(value.slice(1)));\n    } else {\n      dispatch(setFilterValue(value));\n    }\n  };\n\n  return (\n    <Label>\n      <LabelWrapper>\n        <FiSearch size=\"20\" />\n        Find contacts by name\n      </LabelWrapper>\n\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChangeFilterInput}\n      />\n    </Label>\n  );\n};\n\nexport { Filter };\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  align-self: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 8px;\n  padding: 0 8px;\n  max-width: 480px;\n  width: 100%;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 42px;\n  width: 100%;\n  /* max-width: 480px; */\n`;\n\nexport const ItemWrapper = styled.p`\n  display: flex;\n  gap: 36px;\n  /* max-width: 320px; */\n  width: 100%;\n  /* justify-content: space-between; */\n`;\n\nexport const DeleteButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n\n  border-radius: 8px;\n  border: 1px solid #cececf;\n\n  font-size: 16px;\n  font-weight: 500;\n\n  background-color: #d2d8db;\n  color: #666666;\n  box-shadow: #b4b4b4 2px 2px 0px;\n  transition: transform 200ms, box-shadow 200ms;\n\n  &:active {\n    transform: translateX(2px) translateY(2px);\n    box-shadow: #b4b4b4 0px 0px 0px;\n  }\n`;\n\nexport const NameSpan = styled.span`\n  display: block;\n  width: 100%;\n  max-width: 160px;\n  white-space: pre-wrap;\n  overflow-wrap: break-word;\n`;\nexport const NumberSpan = styled.span`\n  /* display: block; */\n  word-break: break-all;\n  /* white-space: wrap; */\n  overflow-wrap: break-word;\n`;\n","export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilterValue = state => state.filter;\n","import { FiUserMinus } from 'react-icons/fi';\nimport {\n  List,\n  Item,\n  ItemWrapper,\n  DeleteButton,\n  NameSpan,\n  NumberSpan,\n} from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport { getContacts, getFilterValue } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getFilterValue);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const getFilteredContacts = () => {\n    return contacts\n      ? contacts.filter(contact =>\n          contact.name.toLowerCase().includes(filterValue.toLocaleLowerCase())\n        )\n      : [];\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    !!filteredContacts.length && (\n      <List>\n        {filteredContacts.map(({ id, name, number }) => (\n          <Item key={id}>\n            <ItemWrapper>\n              <NameSpan>{name}:</NameSpan> <NumberSpan>{number}</NumberSpan>\n            </ItemWrapper>\n            <DeleteButton\n              type=\"button\"\n              onClick={() => handleDeleteContact(id)}\n              aria-label=\"Delete contact\"\n            >\n              <FiUserMinus />\n            </DeleteButton>\n          </Item>\n        ))}\n      </List>\n    )\n  );\n};\n\nexport { ContactsList };\n","import { Header } from 'components/Header';\nimport { Section } from 'components/Section';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactsList } from 'components/ContactsList';\nimport Loader from 'components/Loader/Loader';\nimport { GlobalStyles } from 'components/GlobalStyles';\n\nimport { ToastContainer } from 'react-toastify';\n\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\n// import { useEffect } from 'react';\nimport {\n  // useDispatch,\n  useSelector,\n} from 'react-redux';\n\n// import { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  // const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Your contacts</title>\n        </Helmet>\n        <Header headerTitle=\"Phonebook\" />\n        <Section>\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          {isLoading && !error && <Loader />}\n          <ContactsList />\n        </Section>\n\n        <GlobalStyles />\n        <ToastContainer />\n      </div>\n    </HelmetProvider>\n  );\n}\n"],"names":["HeaderTitle","styled","Header","headerTitle","SectionWrapper","SectionTitle","Section","title","children","Form","FormikForm","Label","LabelWrapper","Field","FormikField","FormButton","ErrorMessage","FormikError","notifyOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","schema","yup","shape","name","trim","max","matches","required","number","initialValues","ContactForm","dispatch","useDispatch","contacts","useSelector","state","items","validationSchema","onSubmit","newContact","resetForm","some","contact","toast","addContact","autoComplete","size","type","maxLength","component","Input","Filter","filterValue","filter","value","pattern","onChange","e","currentTarget","charAt","setFilterValue","slice","List","Item","ItemWrapper","DeleteButton","NameSpan","NumberSpan","getContacts","getIsLoading","isLoading","getError","error","getFilterValue","ContactsList","useEffect","fetchContacts","filteredContacts","toLowerCase","includes","toLocaleLowerCase","length","map","id","onClick","deleteContact","handleDeleteContact","Contacts","Loader","GlobalStyles"],"sourceRoot":""}